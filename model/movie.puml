@startuml
package api{
    class OptionEngageApi{
        + engage(UserId userId)
    }
}
package service{

    class PremiumOptionEngageService{
    + void engage(UserId userId)
    }
    class NoticeService{
    + void send(Notification notification)
    }
}
OptionEngageApi .down.> PremiumOptionEngageService
PremiumOptionEngageService .right.> NoticeService
package domain {
package user {
    class UserId <<Key>>{
                String value
    }
    class RegistrationDate{
        LocalDate value
        + boolean isOneYearPassedSinceRegisterDate()
    }
    interface ContactAddress{
                + NotificationTo createNotificationTo()
    }
    class Sms {
        PhoneNumber phoneNumber
        + NotificationTo createNotificationTo()
    }
    class PhoneNumber{
        String value
        + NotificationTo createNotificationTo()
    }
    class Mail {
        MailAddress mailAddress
        + NotificationTo createNotificationTo()
    }
    class MailAddress{
        String value
        + NotificationTo createNotificationTo()
    }
}
package movie {

        class RegisteredUserEntity <<Entity>> {
            UserId userId
            RegistrationDate registrationDate
            Option<PremiumOption> premiumOption
            ContactAddress contactAddress
            Option<IntroductionCode> introductionCode

            + boolean canEngagePremiumOption()
            + Notification createNotification()
        }

        class PremiumOption{
            OptionNumber optionNumber
        }
        class OptionNumber{
            String value
        }

        interface MovieUserRepository {
        + RegisteredUserEntity referByUserId(UserId userId)
        + OptionNumber engagePremiumOption(UserId userId)
        }
        RegisteredUserEntity .down.> UserId
        RegisteredUserEntity .down.> RegistrationDate
        RegisteredUserEntity .down.> PremiumOption
        RegisteredUserEntity "1" o-- "0..1" PremiumOption
        RegisteredUserEntity .down.> ContactAddress
        ContactAddress .down.> Sms
        ContactAddress .down.> Mail
        Sms .down.> PhoneNumber
        Mail .down.> MailAddress
        PremiumOption .down.> OptionNumber
        }

    package notification{
            class Notification{
                NotificationTo notificationTo
                NotificationText notificationText
            }
            class NotificationTo {
                String value
            }

            class NotificationText {
                String value
            }

            interface NoticeRepository {
                + void sendNotification(Notification notification)
            }

            MailAddress .down.> NotificationTo
            PhoneNumber .down.> NotificationTo
            Notification .down.> NotificationTo
            Notification .down.> NotificationText
            RegisteredUserEntity .down.> Notification
        }

    package introduction_code{
        class IntroductionCode{
            PremiumOptionIntroductionCode premiumOptionIntroductionCode
            IntroductionCodeUseState introductionCodeUseState
        }
        class PremiumOptionIntroductionCode {
            String value
        }
        enum IntroductionCodeUseState{
            USE,
            UNUSED
            + boolean isUnused()
        }
    }


    MovieUserRepository .down.> UserId
    MovieUserRepository .down.> RegisteredUserEntity
    RegisteredUserEntity .down.> IntroductionCode
    RegisteredUserEntity "1" o-- "0..1" IntroductionCode
    IntroductionCode .down.> PremiumOptionIntroductionCode
    IntroductionCode .down.> IntroductionCodeUseState
}
PremiumOptionEngageService .down.> MovieUserRepository
NoticeService .down.> NoticeRepository

@enduml

